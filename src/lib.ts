import axios, { AxiosResponse } from "axios";
import FormData from "form-data";
import {
  IBank,
  ICategory,
  ICreatedBill,
  ICreatedCategory,
  InactivedBillStatus,
  ITransaction,
  IToyyibPay,
  CreateBillParam,
  GetTransactionParam,
  CreateCategoryParam,
} from "./declarations/toyyib";
// Generated by https://quicktype.io

export function jsonToFormData(json) {
  const formData = new FormData();
  Object.keys(json).map(
    (key) =>
      json[key] !== undefined &&
      json[key] !== null &&
      formData.append(key, json[key])
  );

  return formData;
}

class ToyyibPay implements IToyyibPay {
  private token: string;
  host: "https://toyyibpay.com" | "https://dev.toyyibpay.com";

  http = axios.create({});

  constructor(token: string = "", mode: "sandbox" | "live" = "sandbox") {
    this.token = token;
    this.host =
      mode === "live" ? "https://toyyibpay.com" : "https://dev.toyyibpay.com";
    this.http.defaults.baseURL = this.host;
  }
  private api(api: string) {
    return {
      send: async <T>(
        data?: any,
        tokenKey:
          | "userSecretKey"
          | "secretKey"
          | "enterpriseUserSecretKey" = "userSecretKey"
      ) => {
        const formData = data
          ? jsonToFormData({ ...data, [tokenKey]: this.token })
          : undefined;
        const headers = formData
          ? {
              headers: formData.getHeaders(),
            }
          : {};
        return (await this.http.post(api, formData, headers)).data as T;
      },
    };
  }

  createCategory(category: CreateCategoryParam): Promise<ICreatedCategory[]> {
    return this.api("/index.php/api/createCategory").send(category);
  }
  createBill(bill: CreateBillParam): Promise<ICreatedBill[]> {
    return this.api("/index.php/api/createBill").send(bill);
  }
  getBillTransactions(query: GetTransactionParam): Promise<ITransaction[]> {
    return this.api("/index.php/api/getBillTransactions").send(query);
  }
  getCategoryDetails(categoryCode: string): Promise<ICategory[]> {
    return this.api("/index.php/api/getCategoryDetails").send({
      categoryCode,
    });
  }
  inactiveBill(billCode: string): Promise<InactivedBillStatus> {
    return this.api("/index.php/api/inactiveBill").send(
      {
        billCode,
      },
      "secretKey"
    );
  }
  getBank(): Promise<IBank[]> {
    return this.api("/index.php/api/getBank").send();
  }

  //   callbackParameter() {}
  //   returnUrlParameter() {}
}

function Toyyib(token: string = "", mode: "sandbox" | "live" = "sandbox") {
  return new ToyyibPay(token, mode);
}

export default Toyyib;
