import axios, { AxiosResponse } from "axios";
import FormData from "form-data";
import {
  IBank,
  ICreateBillData,
  ICategory,
  ICreatedBill,
  ICreatedCategory,
  InactivedBillStatus,
  ITransaction,
} from "./declarations/toyyib";
// Generated by https://quicktype.io

function jsonToFormData(json) {
  const formData = new FormData();
  Object.keys(json).map((key) => json[key] && formData.append(key, json[key]));

  return formData;
}
class ToyyibPay {
  private token: string;
  host: "https://toyyibpay.com" | "https://dev.toyyibpay.com";

  http = axios.create({});

  constructor(token: string, mode: "sandbox" | "live" = "sandbox") {
    this.token = token;
    this.host =
      mode === "live" ? "https://toyyibpay.com" : "https://dev.toyyibpay.com";
    this.http.defaults.baseURL = this.host;
  }

  private request<T>(
    api: string,
    data?: any,
    tokenKey:
      | "userSecretKey"
      | "secretKey"
      | "enterpriseUserSecretKey" = "userSecretKey"
  ) {
    const formData = data
      ? jsonToFormData({ ...data, [tokenKey]: this.token })
      : undefined;
    const headers = formData
      ? {
          headers: formData.getHeaders(),
        }
      : {};
    return this.http.post<T>(api, formData, headers);
  }

  async createCategory(catname: string, catdescription: string) {
    return (
      await this.request<ICreatedCategory[]>("/index.php/api/createCategory", {
        catname,
        catdescription,
      })
    ).data;
  }
  async createBill(data: ICreateBillData) {
    return (
      await this.request<[ICreatedBill]>("/index.php/api/createBill", data)
    ).data;
  }
  async getBillTransactions(billCode: string, billpaymentStatus?: string) {
    return (
      await this.request<ITransaction[]>("/index.php/api/getBillTransactions", {
        billCode,
        billpaymentStatus,
      })
    ).data;
  }
  async getCategoryDetails(categoryCode: string) {
    return (
      await this.request<ICategory[]>("/index.php/api/getCategoryDetails", {
        categoryCode,
      })
    ).data;
  }
  async inactiveBill(billCode: string) {
    return (
      await this.request<InactivedBillStatus>(
        "/index.php/api/inactiveBill",
        {
          billCode,
        },
        "secretKey"
      )
    ).data;
  }
  async getBank() {
    return (await this.request<IBank>("/index.php/api/getBank")).data;
  }

  //   callbackParameter() {}
  //   returnUrlParameter() {}
}

export default ToyyibPay;
