/**
 *
categoryCode - 
billName - 
billDescription - 
billPriceSetting - 
billPayorInfo - 
billAmount - 
billReturnUrl - 
billCallbackUrl - 
billExternalReferenceNo - 
billTo - 
billEmail - 
billPhone - 
billSplitPayment - 
billSplitPaymentArgs - 
billPaymentChannel - 
billContentEmail - 
billChargeToCustomer - 

billExpiryDate - 
billExpiryDays - day. This parameter is ranged between minimum 1 day to maximum 100 days. The billExpiryDate parameter will be prioritised if both billExpiryDays and billExpiryDate parameters are set.
 */
export interface ICreateBillData {
  /**
   * Category Code. Get your Category Code from Create Category API
   */
  categoryCode: string;
  /**
   * Your bill name. Bill Name will be displayed as bill title
   * * Max 30 alphanumeric characters, space and '_' only
   */
  billName: string;
  /**
   * Your bill description.
   * * Max 100 alphanumeric characters, space and '_' only
   */
  billDescription: string;
  /**
   * For fixed amount bill, set it to 1 and insert bill amount. For dynamic bill (user can insert the amount to pay), set it to 0.
   */
  billPriceSetting: 0 | 1;
  /**
   * If you want to create open bill without require payer information, set it to 0. If you need payer information, set it to 1
   */
  billPayorInfo: "0" | "1";
  /**
   * Key in the bill amount. The amount is in cent. e.g. 100 = RM1. If you set billPriceSetting to 1 (dynamic bill), please put 0
   */
  billAmount: number;
  /**
   * Key in return Url if you need the bill to be redirected to your own page upon payment completion.
   */
  billReturnUrl: string;
  /**
   * Key in callback url if you need the bill to be redirected to your callback page upon sucessful of payment transaction.
   */
  billCallbackUrl: string;
  /**
   * Provide your own system reference no if you think it is required. You may use this reference no to check the payment status for the bill.
   */
  billExternalReferenceNo: string;
  /**
   * If you intend to provide the bill to specific person, you may fill the person nam in this field. If not, please leave it blank.
   */
  billTo: string;
  /**
   * Provide your customer email here
   */
  billEmail: string;
  /**
   * Provide your customer phone number here.
   */
  billPhone: string;
  /**
   * [OPTIONAL] Set 1 if the you need the payment to be splitted to other toyyibPay users.
   */
  billSplitPayment?: number;
  /**
   * [OPTIONAL] Provide JSON for split payment. e.g. [{"id":"johndoe","amount":"200"}]
   */
  billSplitPaymentArgs?: string;
  /**
   * Set 0 for FPX, 1 Credit Card and 2 for both FPX & Credit Card.
   */
  billPaymentChannel: string;
  /**
   * [OPTIONAL] Provide additional messages by sending an extra email to your customer. Limited to 1000 characters only.
   */
  billContentEmail?: string;
  /**
   * [OPTIONAL] Below are the values available :
   * 1. Leave blank to set charges for both FPX and Credit Card on bill owner.
   * 2. Set "0" to charge FPX to customer, Credit Card to bill owner.
   * 3. Set "1" to charge FPX bill owner, Credit Card to customer.
   * 4. Set "2" to charge both FPX and Credit Card to customer.
   */
  billChargeToCustomer?: 0 | 1 | 2 | "";
  /**
   * [OPTIONAL] Date and time to set the bill as inactive (expired). Payer will not be able to make payment after the expiry date. Here is the datetime sample value: "17-12-2020 17:00:00".
   */
  billExpiryDate?: string;
  /**
   * [OPTIONAL] Number of day(s) to allow payment attempt to be made. The bill will be set to inactive after the number of day(s). The default expiry time will be at 23:59:59 on the final
   */
  billExpiryDays?: number;
}
export interface ICreatedBill {
  BillCode: string;
}
export interface InactivedBillStatus {
  status: "success" | "failed";
  result: string;
}
export interface ICategory {
  categoryName: string;
  categoryDescription: string;
  categoryStatus: string | number;
}
export interface ICreatedCategory {
  CategoryCode: string;
}
export interface ITransaction {
  billName: string;
  billDescription: string;
  billTo: string;
  billEmail: string;
  billPhone: string;
  billStatus: string;
  billPermalink: string;
  categoryCode: string;
  categoryName: string;
  userName: string;
  billpaymentChannel: string;
  billSplitPayment?: number;
  billSplitPaymentArgs: string;
  billpaymentSettlement: string;
  billpaymentSettlementDate: string;
  billPaymentDate: string;
  billpaymentStatus: string;
  billpaymentAmount: string;
  billpaymentInvoiceNo: string;
}
// Generated by https://quicktype.io

export interface IBank {
  id: string;
  bank: string;
  status: string;
}
